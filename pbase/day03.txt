字符串str
　作用：用来记录文本信息，在内存中具有一定顺序的编码；
　字符串的表示方法：
　　在非注释中，凡是用引号括起来的部分都是字符串
　　'　单引号
　　"　双引号
　　'''三单引号
　　"""三双引号
空字符串的表示方法：
''
""
''''''   (所见即所得字符串)
""""""
注：　空字符串的布尔测试值为False

非空字符串的表示方法：
'hello'
"hello"
'''hello'''
"""hello"""
单引号和双引号的区别：
　单引号内的双引号不算结束符
　双引号内的单引号不算结束符
实例：
　　print("I'm kinpoll")
　　print('my name is "kinpoll"')
三引号字符串
　用‘’‘或”“”括起来的内容为三引号字符串
　作用：三引号字符串中的换行会自动转换为换行符'\n'
　　　　三引号内可以包含单引号和双引号
　示例：
　　　　用单引号写为：
　　　　print('welcome to beijing.\nI like python!\n I am Studing...')
       用三引号写为：
       print('''welcome to beijing. 
       I like python! 
       I am Studing...''')
       print('''I am kinpoll, my name is "kinpoll"''') # 用三双引不合适这里！

隐式字符串字面值拼接
　示例：
　　s="I'm " '"kinpoll"'这是三双引"""' "这是三单引'''"
　　print(s)

用转义序列代表特殊字符
　字符串字面值中用字符反斜杠（\）后跟一些字符代表一个字符
　　转义字符　　　含义
　　\' 　　　　代表一个单引号
　　\" 　　　　代表一个双引号
　　\\ 　　　　一个反斜杠
　　\n 　　　　代表一个换行符－－－－－－－－－－－－－－－－－－－以下（包括本行）为控制字符，不显示
　　\r 　　　　返回当标至行首字符            print("ABCD\rab") # 得到abCD
　　\t　　　　　水平制表符                  print("ABCD\trab") # 得到ABCD    rab　
　　\v 　　　　垂直制表符
　　\b　　　　　倒退字符 backspace          print("ABCD\brab") #得到ABCrab
　　\f　　　　　换页
　　\0　　　　　空字符（字符值为零）　　等同于\x00
　　\0oo 　　　oo为两位八进制表示的字符
　　\xXX 　　　XX为两位十六进制的字符
　　\uXXXX 　　XXXX为四位十六进制表示的Unicode16字符
　　\UXXXXXXXX 　Unicode32的十六进制表示的字符

print("ABCD")  等同于　print("\x41\x42\x43\x44")
ACSII　编码
　　$ man ascii #　查看所有英文字符的编码－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
常用的ascii编码：
　　字符　　　　十进制　　　十六进制
　　'0'       48         0x30                               输入(print(\x41))　　＃　Ａ
　　'A'       65         0x41
　　'a'       97         0x61
　　' '       32         0x20

返回字符串长度函数
　len(s)返回字符串的字符个数
练习：
　求一下字符串有几个字符？
①'1234abcd'        8
②'5\'4"'           4
③'\"A\x34\056'     4
④'\r\n\t\z'        5

raw字符串（原始字符串）
　格式：
　　r'字符串内容’
　　r"字符串内容"
　　r'''字符串内容'''
　　r"""字符串内容"""
　作用：让转义字符\无效
示例：
  s1='C:\newfile\test.py'
  print(s1)
  s2=r'C:\newfile\test.py'
  print(s2)

字符串的运算
　运算符：
　= =+ * *=
+ 加号用于拼接字符串
＝＋　用于原字符串与右字符串拼接后替换原变量
示例：
　　s="abcd"+"123" #　s='abcd1234'
　　s+="ABCD"      #  s='abcd123ABCD'

运算符生成的重复的字符串
  x="ABCD"*3#x='ABCDABCDABCD'
  注：　字符串只能和整数相乘
  x="123"
  x*=2  # x='123123'

练习：
　　写一个程序，打印一个高度为４行的矩形方框
　　如：
　　　请输入矩形宽度：10
　　打印：
   ##########
   #        #
   #        #
   ##########

字符串的比较运算：
　运算符：
　< <= > >= == !=
　规则：依次按编码值进行比较，一旦不容，比较将结束
　当编码值与长度完全相同时两个字符串相等
示例：
　　'A'<'B'      # True
　　'ABC'>'ABB'  # True
　　'ABC'<'ACB'  # True   第二个字符比较出来为True时直接返回　不继续比较下去＃＃＃＃字符比较运算符号规则为or的关系，优先返回True
　　'ABC'>'abc'  # False 
　　'AB'<'ABC'   # True 
　　'ABC'!='CBA' # True　　字符串是有次序关系的

in/ not in运算符：
　作用：
　　in用于序列(即字符串)，字典，集合中，用于判断某个值是否存在于容器中，如果存在返回True，否则返回False
　　not in　与in的返回结果相反
　格式：
　对象序列
　示例：
　　　x='welcome to beijing'
　　　'to' in x # True
　　　'tarena' in x # False
　　　'123' not in x # True

索引运算　index
 Python　字符串是不可以改变的字符序列
　语法：
　　字符串[整数表达式]
　说明：
　　１．python序列都可以用索引（index）来访问序列中的对象
　　２．python序列正向索引是从0开始的，第二个索引为1，...,最后一个索引为les(s)-1
　　３．python序列的反向索引是从-1开始的，-1代表最后一个，-2代表倒数第二个，...,第一个是-les(s)
　示例：
　　s='ABCDE'
   print(s[1]) #B 
   print(s[4]) #E
   print(s[-1]) #E
练习：
　输入一个字符串，打印一下内容：
　１）打印这个字符串的第一个字符
　２）打印这个字符串的第二个字符
　３）如果这个字符串的长度是奇数，打印中间的字符
　注：求字符串长度的函数是len(s)

字符串的切片操作　slice
 从字符串序列中取出相应的元素，重新组成一个新的字符串序列
 语法：
 　字符串[(开始索引b):(结束索引e):(:(步长s))]
   注：小括号括起来的部分可以省略
 说明：
   1.开始索引是切片开始切下的位置，0代表第一个元素...，-1代表最后一个索引（与索引规则相同）
   2.结束索引是切片的终止索引（但不包括终止点）
   3.步长是切片每次获取完当前元素向后移动的方向和偏移量
    1)没有步长，默认步长为1
    2)当步长为正数时，取正向切片，开始索引默认为0，结束索引默认为最后一个元素的下一个位置
    3)当步长为负数时，取反向切片，默认起始位置为最后一个元素，终止位置是第一个元素的前一个位置
 示例：
   s="ABCDE"
   a=s[1:4] #a=BCD
   a=s[1:]  #a=BCDE
   a=s[:4]  #a=ABCD
   a=s[:]   #a=ABCDE
   a=s[2:2] #a=''空字符串
   a=s[4:2] #a=''
   a=s[::2] #a=ACE 
   a=s[::-1]#a=EDCBA
   a=s[::-2]#a=ECA 
   a=s[3:0:-1]#a=DCB
   a=s[3::-2]#a=DB 
 练习：
   1.写一个程序，输入一个字符串，把字符串的第一个字符和最后一个字符去掉后，打印出处理后的字符串
   2.写一个程序，输入任意一个字符串，判断这个字符串是否是回文（回文是指中心对阵的文字）
-------------------------------------------------------------------------------------
# h=input("请输入一个字符串：")
# if h[:]==h[::-1]:
#     print(h,"是回文")
# else:
#     print(h,"不是回文")
--------------------------------------------------------------------------------------
python运算符的优先级：
 见文档:
  code.tarena.com,cn

python3中 常用的序列函数
 len(x) 返回序列的长度
 max(x) 返回序列的最大值元素
 min(x) 返回序列的最小值元素
示例：
 s='hello'
 print(len(s)) # 5
 print(max(s)) # o
 print(min(s)) # e

字符的编码转换函数
 ord(c) 返回一个字符c的Unicode编码值
 chr(i)  返回i这个值所对应的字符
 示例：
 c=ord('A')
 print(c)                      #65
 ch=chr(c)                     #ch='A'
 print(ch)                     # A

练习：
 1.写一个程序，输入一个字符串，如果字符串不为空，则把第一个字符串的编码值打印出来
 2.写一个程序，输入一个整数（0~65535）,打印出这个数值所对应的字符  

整数转字符串函数：
 bin(i) 将整数转为二进制字符串--binary
 oct(i) 将整数转为八进制字符串
 hex(i) 将整数转为16进制字符串
 str(i) 将整数转为10进制字符串
 示例：
 a=13
 print(bin(a))   #0b1101
 print(oct(a))   #0o15
 print(hex(a))   #0xd

字符串的构造函数
 str(obj='') 将对象转换为字符串
 示例：
   "123"+1 #报错
   "123"+str(1) #1231

python3中常用的字符串方法（method）
方法的调用语法：
 对象.方法名（方法传参）
 示例：
  'abc'.isalpha() #对的
   123.isalpha()  #错的
 文档参见：
 　python_base_docs_html/str.html
----------------------------------------------------------------------------------------------------------------
常用字符串方法:
      方法	                                 说明
   S.isdigit()	                          判断字符串中的字符是否全为数字
   S.isalpha()	                          判断字符串是否全为英文字母
   S.islower()	                          判断字符串所有字符是否全为小写英文字母
   S.isupper()	                          判断字符串所有字符是否全为大写英文字母
   S.isspace()	                          判断字符串是否全为空白字符
   S.center(width[,fill])	              将原字符串居中，左右默认填充空格
   S.count(sub[, start[,end]])	          获取一个字符串中子串的个数
   S.find(sub[, start[,end]])	          获取字符串中子串sub的索引,失败返回-1
   S.strip()	                            返回去掉左右空白字符的字符串
   S.lstrip()	                          返回去掉左侧空白字符的字符串
   S.rstrip()	                          返回去掉右侧空白字符的字符串
   S.upper()	                            生成将英文转换为大写的字符串
   S.lower()	                            生成将英文转换为小写的字符串
   S.replace(old, new[, count])          将原字符串的old用new代替，生成一个新的字符串
   S.startswith(prefix[, start[, end]])  返回S是否是以prefix开头，如果以prefix开头返回True,否则返回False,
   S.endswith(suffix[, start[, end]])    返回S是否是以suffix结尾，如果以suffix结尾返回True,否则返回False
以下是不常用的	 
   S.title()	生成每个英文单词的首字母大写字符串
   S.isnumeric()	判断字符串是否全为数字字符
   >>> help(str)      交互模式下查找字符串使用方法的规则
----------------------------------------------------------------------------------------------------------------
空白字符:是指空格,水平制表符(\t),换行符(\n)等不可见的字符


－－－－－－－－－－－－－－－－－－－－－－－－－
练习：
　１．输入一个字符串，把输入的字符串中的空格全部去除（包括字符串中间的的空格）
　　　1)打印原字符串及长度
　　　2)打印处理后的字符串长度
　２．写程序。输入三行文字。让这三行文字在一个方框内居中显示
　　　如：
　　　　　请输入：hello!
　　　　　请输入：I'm studing python!
　　　　　请输入：I like python!
　　　打印如下：
　　　　　+---------------------+
　　　　　|        hello!       |
　　　　　| I'm studing python! |
　　　　　|    I like python!   |
　　　　　+---------------------+
　　　注：不要输入中文




