for 语句（另一循环语句，承上）
　作用：
　　用来遍历可迭代对象的数据元素
遍历：经历　并且只经历一次　

可迭代对象：
　字符串str
-----------------------------------（以下后面会讲）------------------
  列表list
  元祖tuple
  字典dict
  集合set
  ...

语法：
　for 变量列表　in 可迭代对象
　　　语句块１（重复执行）
　else:
     语句块２
说明：
　else　子句可以省略（同while相似）
　当在循环内部用break终止循环时，else子句部分的语句不会执行
示例：
-------------
s='ABCDE'
for ch in s:
    print("ch--->",ch)　　　　　　　　　　　　　　　#相当于　构造一个变量　专用来遍历并　绑定　迭代对象里面的元素
else:
    print("遍历字符串",s,"结束")
-------------
练习：
　任意输入一个字符串：
　　１）计算这个字符串"a"这个字符的个数，斌打印出来
　　２）计算空格的数量，并打印出来
　　（要求：用for语句实现，不允许使用S.count方法）
#---------------------------------------
s=input("任意输入一个字符串：")
n=0
i=0
for x in s:
    if x=='a':
        n+=1
    if x==' ':
        i+=1
print("a的个数为：",n)
print("空格的个数为：",i)
#---------------------------------------
　思考：
　　用while语句能否实现上述功能？
#---------------------------------------
s=input("任意输入一个字符串：")
i=0
n=0
while i<len(s):
 　　　ch=s[i]
 　　　print('ch-->',ch)
 　　　i+=1                           
#---------------------------------------
range() 函数
　作用：
　　用来创建一个生成一系列整数的可迭代对象（也叫整数序列生成器）

　　　　函数　　　　　　　　　　    　　　　　 说明
　　　　range(stop)      　　　　　　　　　用来生成0~stop之间内的整数，直到stop为止（不包含stop）
　　　　range(start,stop[,step])        用来生成start~stop之间的整数，直到stop为止（不包含stop） ，每个整数间间隔step，且step可以为负数

　说明：
　　此对象可用于for语句来进行迭代取出其中的对象
　示例：
  range(4)         #生成 0 1 2 3
  range(3,6)       #生成 3 4 5
  range(1,10,2)    #生成 1 3 5 7 9
  range(5,0,-2)    #生成 5 3 1

  range示例：
  for x in range(4):
    print(x) # 0 1 2 3 

练习：
１．用for语句打印1~20的整数，打印在一行内
２．用for语句打印1~20的整数，每行打印5个，打印4行
-------------------------
for x in range(1,21):
    print(x,end='')
print()
for x in range(1,21):
    print(x,end='')
    if x%5==0:
        print()
--------------------------
练习：
３．求100以内有哪些数与自身＋1的成绩　再对11求余　结果等于8？
    x*(x+1)%11=8
４．输入一段字符串，判断您输入的字符串有几个中文字符：
　　（注：中文字符的编码值一定大于127）
    提示：用ord（x）函数可以返回一个字符的编码值
#--------------------------------------------
for x in range(1,101):
    if x*(x+1)%11==8:
        print(x,end='  ')
#-------------------------------------------
s=input("输入一段字符串：")
n=0
for w in s:
    if ord(w)>127:         
        n+=1
print(n)
#---------------------------------------------

for 语句的注意事项：
①for语句range调用顺序：
　示意：
　　请问此程序打印的结果是什么？
-------
i=6
for x in range(1,i):#range函数只调用１次
    #此print函数会执行5次，
    print('x=',x,'i=',i)
    i-=1
-------
②for语句变量列表里的变量可能不会创建
for x in range(1,4):
    print(x)
else:
    print("循环结束后x的值是",x) #报错
③for语句中用break语句中断执行时，else语句不会执行：
示例：
for x in range(10):
    print(x)
    if x==3:
        break　#中断循环，不执行else
else:
    print("for语句结束")    
-----------------------------------------------------------


for　语句嵌套
示例：
------------------------
for x in "abc":
    for y in "123":
        print(x+y) #输出９次
------------------------
练习：
写一个程序，打印26个大写英文字母和26个小写英文字母
"A" 65
"a" 97
----------
for x in range(ord('A'),ord('Z')+1):
    print(chr(x),end=' ')

for y in range(ord('a'),ord('z')+1):
    print(chr(y),end=' ')
------------------------------------------------------------------

continue　语句
　问题：
　　如何让程序不再向下执行本次循环，重新开始一次新的循环
　作用：
　  用于循环语句（while,for语句中），不再执行本次循环内continue之后的语句，重新开始一次新的循环
　说明：
　  １．在for语句中执行continue语句，将会从可迭代对象中选取下一个数据，绑定变量后开始一次新的循环
　  ２．在while语句中，执行continue语句，将会直接跳转到while语句真值表达式处，重新判断循环条件
　语法：
    continue (#跳转到下一个循环)
　示例见：
---------
for x in range(5):
    if x==2:
        continue
    print(x)
---------
#此示例将continue用于while循环中的情况
#用while打印10以内的偶数
i=0
while i<10:
    if i%2==1:
        i+=1
        continue
    print(i)
    i+=1
---------
练习：
１．输入一个整数代表开始用begin绑定
　　输入．．．．代表结束用end绑定
　　打印从begin~end（不包含end）之间的全部奇数
２．求1~100之间所有不能被2,3,5,7整除的数
①打印这些数
②打印这些数的和
-----------------------
 begin=int(input("输入一个整数代表开始："))
 end=int(input("输入一个整数代表结束："))
 for x in range(begin,end):
     if x%2==0:
         continue
     print(x,end=' ')
----------------
 n=0
 for x in range(1,101):
     if x%2==0 or x%3==0 or x%5==0 or x%7==0:
         continue
     print(x,end=' ')
     n+=x
 print()
 print(n)

-----------------------
循环语句小结：
while
for
　　字符串str 
　　range()函数返回对象
break
continue
＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

列表　list　　
列表的定义：
　列表是一种容器
　列表是可以改变的序列
　列表由一系列元素组成，元素与元素之间可能没有任何的关联关系，但他们之间有先后顺序

python3中序列的类型（sequence）
字符串　 　  str 
列表        list
元祖        tuple
字节串     　bytes
字符数组     bytearray　

创建空列表的字面值:
　[]       # 创建空列表的表达式
创建非空列表的字面值:
　L=[1,2,3,4]　
　L=['北京','上海','深圳']
　L=[1,'Two',3.14,'四']
　L=[1,2,[3.1,3.2],4]

列表的构造（创建）函数　list
list() #生成一个空的列表　等同于[]
list(iterable) #用可迭代对象创建一个列表
示例：　
   L=list() #L绑定空列表
   L=list("hello") #L绑定['h','e','l','l','o']
   L=list(range(7,10)) #L＝[7,8,9]

列表的运算：
　算数运算：
  +   +=   *   *=
-------------------------------------------------
  “+”   用于拼接列表　
  lx=[1,2,3]
  ly=[4,5,6]
  lz=lx+ly           # lz=[1,2,3,4,5,6]
-------------------------------------------------
  “+=”  用原列表与右侧列表拼接，再用变量绑定列表
  　　语法：
  　　L+=可迭代对象
  　　示例：　
  　　 L=[1,2,3]
      id(L)        # 1406.....4
　 　  L+=[4,5,6]　 #L=[1,2,3,4,5,6]
      id(L)        # 1406......4
      内存位置id(L)不变，相当于把[4,5,6]扩入到原先的位置的内存中：对应了“列表是可以被改变的序列”

      L=L+[4,5,6]
      此时id(L)已变化，相当于绑定一个新的列表
---------------------------------------------------      
　“*”   用于生成重复的列表
     x=[1,2]*3    # x=[1,2,1,2,1,2]
---------------------------------------------------
　“*=”  用原列表生成重复列表，并用变量绑定生成的列表
　　　x=[1,2]
     x*=3         # x=[1,2,1,2,1,2]
------------------------------------------------------
列表的比较：
　运算符：
　　< <= > >= == !=
　说明：
　　列表的比较规则与字符串的比较规则相同
　　列表要求每两个元素能依次进行比较，否则会出现类型错误
　示例：　
　　x=[1,2,3]
　　y=[1,3,2]
　　x<y #True
　　x>y #False
　　[1,'Two']>['Two',1] #TypeError
　　[1,'Two',3.14]<[1,'二',5.6] #True 
------------------------------------------------------
列表是可迭代对象
　l=[1,3,5,7]
　for x in L:
      print(L)   #1 3 5 7

练习：
１．写一个程序，让用户输入多个正整数，当输入负数时结束输入
  将用户输入的数存在于列表中，打印列表
如：
　请输入：1
　请输入：2
　请输入：3
　请输入：4
　请输入：-1
打印：
　[1,2,3,4]
#----------------------------
L=[]
while True:
    s=int(input("请输入正整数："))
    if s>0:
        L+=[s]
    else:
        break   
print(L)
#---------------------------------

    
列表的索引赋值操作：
 列表是可变的序列，可以通过索引赋值改变列表中的元素
 语法：
     列表[整数表达式]=表达式
 示例：
     x=[1,'二',3,'Four']
     x[1]=2                    #将列表的第二个元素改为2
     x[-1]=4
     print(x)                   #[1,2,3,4]


列表的切片操作
 语法：
     列表[(开始索引):(结束索引e)(:(步长s))]
 说明：
     列表切片取值返回一个列表，规则等同于字符串规则
 示例：
x=[0,1,2,3,4,5,6,7,8]
y=x[1:9:2]   #奇数


列表切片的赋值操作：
　作用：
　　可以改变原列表的排序，可以插入和修改数据
　　可以用切片改变列表对应的元素的值
　语法：
　　列表[切片]=可迭代对象
　注：赋值运算符的右侧必须是一个可迭代对象
　示例：　
    L=[2.2,3.3,4.4]
    L[0:1]=[1,2]   # L=[1,2,3.3,4.4]　
    L=[2:]=[3,4,5] # L=[1,2,3,4,5]
    L[:]=[30,40]   # L=[30,40]
    L[0:0]=[10,20] # L=[10,20,30,40]
    L=[3,4]
    L[1:1]=[3.1,3.2] # L=[3,3.1,3.2,4]
    L=[3,4]
    L[1:1]="AB"    # L=[3,'A','B',4]

切片注意事项：
　对于步长不等于1的切片赋值。赋值运算符的右侧的可迭代对象提供的元素个数一定要等于切片切出的段数
　如：
　　L=[1,2,3,4,5,6]
　　L[::2]="ABC" 　　#对的
　　L[::2]="ABCD"　　#错的

练习：
１．写程序输入一个三角形的宽和高，打印三角形
　　如：
　　输入：3
　　①
　　*
　　**
　　***
　　②　
　　  *
　　 **
　　***
　　③
　　***
　　**
　　*
　　④
　　***
　　 **
　　  *
２．任意输入一个整数，判断这个数是否为素数（prime）
素数（也叫质数），只能被１和自身整除的正整数
　　提示：
　　用排除法：当判断x是否为素数时，只需让x分别除以2,3,4,5...x-1,只要有任何一个数能整除这些数，则说明x不是素数，否则为素数
３．编写程序求下列多项式的值
　Sn=1/1-1/3+1/5-1/7+....
　　①求1000000个这样的分数相加的值为多少？
　　②将上一步的和乘以４打印出来，是多少？
４．算出100~900之间的水仙花数（Narcissistic Number）
　　水仙花数是指：百位的^3＋十位的^3＋个位的^3==原数的整数
　　如：153=1^3+5^3+3^3
　　答案：　153 370 ..(共４个)
